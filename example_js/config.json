{
  "title": "AreaChart",
  "width": 800,
  "height": 400,
  "code": "\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst offset = d3.stackOffsetNone;\n\nconst Component = ()=>{\n  const ref = useRef();\n const {input,config,setConfig,setOutput} = props; \n  const data = input.data;\n\n  useEffect(() => {\n    if (!data) return;\n    const width = config.width;\n    const height = config.height;\n    const m = data[0]?.length;\n    const n = data.length;\n    const flatData = data.flat(2);\n\n    const maxY = d3.max(flatData);\n    const x = d3\n      .scaleLinear()\n      .domain([0, m - 1])\n      .range([0, width]);\n    const y = d3.scaleLinear().domain([0, maxY]).range([height, 0]);\n    const z = d3.interpolateCool;\n\n    const area = d3\n      .area()\n      .x((d, i) => x(i))\n      .y0((d) => y(d[0]))\n      .y1((d) => y(d[1]));\n\n    const stack = d3\n      .stack()\n      .keys(d3.range(n))\n      .offset(offset)\n      .order(d3.stackOrderNone);\n\n    const svg = d3\n      .select(ref.current)\n      .attr('viewBox', [0, 0, width, height])\n      .attr('width', width)\n      .attr('height', height)\n      .attr('style', 'max-width: 100%; max-height: 100%;');\n\n    svg\n      .selectAll('path')\n      .data(data)\n      .join('path')\n      .attr('d', area)\n      .attr('fill', (d, i) => z(i / n));\n  }, [data]);\n\n  setOutput({'output':'hello'});\n\n  return <>\n  <h1>{config.title}</h1>\n  <svg ref={ref}></svg>\n  </>;\n}\n\nexport default Component;\n"
}