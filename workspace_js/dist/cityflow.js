
  export const cityflow = {
      module: {
        input: {
  "input": [
    [
      [
        0,
        0.36
      ],
      [
        0,
        0.2
      ],
      [
        0,
        0.3
      ],
      [
        0,
        2.96
      ],
      [
        0,
        1.17
      ],
      [
        0,
        0.02
      ],
      [
        0,
        0
      ],
      [
        0,
        0.75
      ],
      [
        0,
        0
      ],
      [
        0,
        0
      ]
    ],
    [
      [
        0.36,
        0.97
      ],
      [
        0.2,
        0.26
      ],
      [
        0.3,
        0.58
      ],
      [
        2.96,
        3.93
      ],
      [
        1.17,
        1.51
      ],
      [
        0.02,
        0.04
      ],
      [
        0,
        0
      ],
      [
        0.75,
        0.75
      ],
      [
        0,
        0
      ],
      [
        0,
        0
      ]
    ],
    [
      [
        0.97,
        5.4
      ],
      [
        0.26,
        2.18
      ],
      [
        0.58,
        0.73
      ],
      [
        3.93,
        3.93
      ],
      [
        1.51,
        1.51
      ],
      [
        0.04,
        0.04
      ],
      [
        0,
        0
      ],
      [
        0.75,
        0.77
      ],
      [
        0,
        2.81
      ],
      [
        0,
        1.01
      ]
    ],
    [
      [
        5.4,
        5.43
      ],
      [
        2.18,
        3.6
      ],
      [
        0.73,
        2.75
      ],
      [
        3.93,
        4.36
      ],
      [
        1.51,
        1.52
      ],
      [
        0.04,
        0.04
      ],
      [
        0,
        0
      ],
      [
        0.77,
        0.77
      ],
      [
        2.81,
        2.81
      ],
      [
        1.01,
        1.01
      ]
    ],
    [
      [
        5.43,
        5.43
      ],
      [
        3.6,
        3.63
      ],
      [
        2.75,
        4.27
      ],
      [
        4.36,
        7.64
      ],
      [
        1.52,
        3.08
      ],
      [
        0.04,
        1.94
      ],
      [
        0,
        0.24
      ],
      [
        0.77,
        0.78
      ],
      [
        2.81,
        2.81
      ],
      [
        1.01,
        1.01
      ]
    ]
  ]
}
,
        config: {
  "title": "AreaChart",
  "width": 800,
  "height": 400,
  "code": "\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst offset = d3.stackOffsetNone;\n\nconst Component = ()=>{\n  const ref = useRef();\n const {input,config,setConfig,setOutput} = props; \n  const data = input.data;\n\n  useEffect(() => {\n    if (!data) return;\n    const width = config.width;\n    const height = config.height;\n    const m = data[0]?.length;\n    const n = data.length;\n    const flatData = data.flat(2);\n\n    const maxY = d3.max(flatData);\n    const x = d3\n      .scaleLinear()\n      .domain([0, m - 1])\n      .range([0, width]);\n    const y = d3.scaleLinear().domain([0, maxY]).range([height, 0]);\n    const z = d3.interpolateCool;\n\n    const area = d3\n      .area()\n      .x((d, i) => x(i))\n      .y0((d) => y(d[0]))\n      .y1((d) => y(d[1]));\n\n    const stack = d3\n      .stack()\n      .keys(d3.range(n))\n      .offset(offset)\n      .order(d3.stackOrderNone);\n\n    const svg = d3\n      .select(ref.current)\n      .attr('viewBox', [0, 0, width, height])\n      .attr('width', width)\n      .attr('height', height)\n      .attr('style', 'max-width: 100%; max-height: 100%;');\n\n    svg\n      .selectAll('path')\n      .data(data)\n      .join('path')\n      .attr('d', area)\n      .attr('fill', (d, i) => z(i / n));\n  }, [data]);\n\n  setOutput({'output':'hello'});\n\n  return <>\n  <h1>{config.title}</h1>\n  <svg ref={ref}></svg>\n  </>;\n}\n\nexport default Component;\n"
},
        output: {},
        setOutput: (newOutput) => {
          cityflow.module.output = newOutput;
        },
        setConfig: (newConfig) => {
          cityflow.module.config = { ...cityflow.module.config, ...newConfig };
        },
      },
    };
  window.cityflow = cityflow;
  